<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:flexlib="flexlib.containers.*"
	layout="absolute" width="800" height="600" windowComplete="init()">
<mx:Script>
<![CDATA[
	import mx.events.IndexChangedEvent;
	import mx.events.MenuEvent;
	import mx.core.Container;
	import mx.containers.*;
	import mx.controls.Label;
	import mx.controls.HTML;
	import flexlib.controls.tabBarClasses.SuperTab;
	import mx.events.ListEvent;
	[Bindable]
	public var contexts:XML;
	public var homepage:String = "http://www.cbc.ca";
	
	[Embed(source="./flexlib/assets/document.png")]
	private var document_icon:Class;
	
	[Embed(source="./flexlib/assets/home.png")]
	private var home_icon:Class;

	public function init():void
	{
		var file:File = File.applicationDirectory.resolvePath("test.xml"); 
		var fileStream:FileStream = new FileStream(); 
		fileStream.open(file, FileMode.READ); 
		var stringRead:String = fileStream.readUTFBytes(fileStream.bytesAvailable);
		contexts = XML(stringRead); 
		fileStream.close();
		
		contextTabBar.addEventListener(SuperTabNavigator.AddTabEvent, addContextWithTabBarButton);
		contextTabBar.addEventListener(IndexChangedEvent.CHANGE, updateAddressBar);
		addContext("Default");
	}
	
	public function treeItemDoubleClicked(e:ListEvent):void
	{
		trace(XML(e.itemRenderer.data).localName());
	}
	
	public function addContextWithTabBarButton(e:Event):void
	{
		addContext("New Group");
		
		// set context focus
		contextTabBar.selectedIndex = contextTabBar.numChildren-1;
	}
	
	public function getCurrentTabNavigator():SuperTabNavigator
	{
		return Context(contextTabBar.selectedChild).navigator;
	}
	
	public function getCurrentTab():Tab
	{
		return Tab(getCurrentTabNavigator().selectedChild);
	}
	
	public function addTabWithTabBarButton(e:Event):void
	{ 
		addTab(homepage, getCurrentTabNavigator(), homepage);
		
		//set tab focus
		getCurrentTabNavigator().selectedIndex = getCurrentTabNavigator().numChildren-1;
	}
	
	public function updateAddressBar(e:Event=null):void
	{
		addressInput.text = getCurrentTab().htmlPane.location;
	}
	
	public function changeTabURLinFocus(address:String):void
	{
		getCurrentTab().htmlPane.location = address;
	}
	
	private function addContext(lbl:String):void
	{
		if(lbl=="") lbl = "(Default)";

		var context:Context = new Context();
		context.label = lbl;
		context.setStyle("closable", true);
		if(icon) {
			context.icon = icon;
		}
		else {
			context.icon = document_icon;
		}
		contextTabBar.addChild(context);
		addTab(homepage, context.navigator, homepage);
		context.navigator.addEventListener("AddTab", addTabWithTabBarButton);
		context.navigator.addEventListener(IndexChangedEvent.CHANGE, updateAddressBar);
	}
	
	private function addTab(lbl:String, navigator:SuperTabNavigator, address:String, icon:Class=null):void 
	{
		if(lbl=="") lbl = "(Untitled)";
		
		var tab:Tab = new Tab();
		tab.setStyle("closable", true);
		tab.label = lbl;
		if(icon) {
			tab.icon = icon;
		}
		else {
			tab.icon = document_icon;
		}
		tab.addEventListener(Tab.locationChangedEvent, locationChanged);
		navigator.addChild(tab);
		tab.htmlPane.location = address;
	}
	
	public function locationChanged(e:Event):void
	{
		updateAddressBar();
	}
]]>
</mx:Script>

	<mx:VBox x="9" y="9" width="100%" height="100%">
		<mx:HBox width="100%" height="25">
			<mx:Text textAlign="left" height="31" text="Address"/>
			<mx:TextInput width="100%" height="25" id="addressInput" enter="changeTabURLinFocus(addressInput.text);"/>
			<mx:Button label="Go" width="42" height="24" click="changeTabURLinFocus(addressInput.text);"/>
		</mx:HBox>
		<mx:HDividedBox width="100%" height="100%">
			<mx:Accordion width="150" height="100%">
				<mx:Canvas label="Active" width="100%" height="100%">
					<mx:Tree x="0" y="0" width="100%" height="100%" dataProvider="{contexts}" id="tree" 
						labelField="@label" showRoot="false"
						change="addressInput.text = tree.selectedItem.@address; changeTabURLinFocus(addressInput.text);"
						doubleClickEnabled="true"
						itemDoubleClick="treeItemDoubleClicked(event)"/>					
				</mx:Canvas>
				<mx:Canvas label="Inactive" width="100%" height="100%"/>
			</mx:Accordion>
			<flexlib:SuperTabNavigator id="contextTabBar" scrollSpeed="25" dropShadowEnabled="true"
				stopScrollingEvent="{MouseEvent.MOUSE_OUT}" startScrollingEvent="{MouseEvent.MOUSE_OVER}"
				width="100%" height="100%" horizontalGap="0" editableTabLabels="true"
				closePolicy="{SuperTab.CLOSE_ALWAYS}"/>
		</mx:HDividedBox>
	</mx:VBox>
</mx:WindowedApplication>
